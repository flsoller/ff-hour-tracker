name: AWS_Deploy_Stack

on:
  workflow_dispatch:

jobs:
  deploy_ecr_repos:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '20.12.2'

      - name: Configure AWS Credentials For GitHub Actions
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # In the future, role will be scoped per account (dev, test, prod)
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}
          mask-aws-account-id: true

      - name: Install CDK Workspace Dependencies
        run: |
          yarn plugin import workspace-tools
          yarn workspaces focus aws_cdk

      - name: Deploy CDK Stack
        working-directory: ./aws_cdk
        run: yarn cdk deploy HourTrackerImageRepositories --require-approval never

  build_images:
    needs: deploy_ecr_repos
    secrets: inherit
    uses: ./.github/workflows/aws_ecr_build.yml

  deploy_api:
    needs: build_images
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '20.12.2'

      - name: Configure AWS Credentials For GitHub Actions
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # In the future, role will be scoped per account (dev, test, prod)
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}
          mask-aws-account-id: true

      - name: Install CDK Workspace Dependencies
        run: |
          yarn plugin import workspace-tools
          yarn workspaces focus aws_cdk

      - name: Deploy CDK Stack
        working-directory: ./aws_cdk
        run: yarn cdk deploy HourTrackerApi --require-approval never
