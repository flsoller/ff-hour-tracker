name: AWS_ECR_Build_Images

on:
  workflow_dispatch:
  workflow_call:

jobs:
  build-images:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        include:
          - repository: hour-tracker-api-authorizer
            dockerfile: apps/api/authorizer/Dockerfile
            platform: linux/arm64
          - repository: hour-tracker-api-authenticator
            dockerfile: apps/api/authenticator/Dockerfile
            platform: linux/arm64

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials For GitHub Actions
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # In the future, role will be scoped per account (dev, test, prod)
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}
          mask-aws-account-id: true

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: "true"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build, tag, and push docker images to ECR
        uses: docker/build-push-action@v5
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          platforms: ${{ matrix.platform }}
          provenance: false
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ matrix.repository }}:${{ github.sha }}
          cache-from: type=gha,scope=build-${{ matrix.repository }}
          cache-to: type=gha,mode=max,scope=build-${{ matrix.repository }}
